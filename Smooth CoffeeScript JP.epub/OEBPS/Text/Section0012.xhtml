<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
</head>

<body>
  <p>P16</p>

  <p>これは私たちに改善を与えました。最も重要なのは、これからはもう、あの頃の私たちが望んだ再帰呼び出しを指定する必要はないということだ。魔法の言葉、”while”がその面倒を見てくれる。count&lt;=10、つまりcountが10以下という条件が真である間、インデントされた中の実行を繰り返す。どうやら、もはや一時的な値を作り、それを0と比較することは必要ありません。これは小さくて愚かな詳細でした、プログラミング言語の力は私たちに小さな愚かな詳細の面倒をみてくれます。</p>

  <p>どうやら、またCoffeescriptによって短く表現されました。</p>

  <p>forとinという単語は1~10という数字の範囲を通過し、その間countに数字をあてがいます。countに入ったそれぞれの値はtotalに加えます。</p>

  <p>最後に、便利で効果的なsumを用いると、数字を加算していくことができるみたいです。これは数学記号のΣ10, n=1 n:に似ています。</p>

  <p>show sum[1..10]</p>

  <p>他の可能性はデータの型を付属する関数を持つことです。以下の場合のsumでは配列を追加して、配列の中の要素の合計を与えます。</p>

  <p>この話の教訓は、上記のように同じプログラムを長くも短くも読み難くも読み易くも表現できる、ということです。プログラムの最初のバージョンは非常に不明瞭でしたが、一方で最後の方ではほとんど英語のように明瞭です。show the sum of numbers from 1 to 10.みたいにね。(後に出てくる章で、sumのようなものを作る方法が出てきます。)</p>

  <p><br /></p>
</body>
</html>
