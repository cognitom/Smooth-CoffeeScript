<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
  <style type="text/css">

  /*<![CDATA[*/

  span.sgc-5 {font-size: 10.000000pt; font-family: 'Consolas'; font-style: italic}
  span.sgc-4 {font-size: 10.000000pt; font-family: 'Consolas'; font-style: italic; color: rgb(25.000000%, 50.000000%, 0.000000%)}
  span.sgc-3 {font-size: 10.000000pt; font-family: 'Consolas'}
  span.sgc-2 {font-size: 10.000000pt; font-family: 'Consolas'; color: rgb(47.400000%, 40.400000%, 38.800000%)}
  span.sgc-1 {font-size: 10.000000pt; font-family: 'Consolas'; color: rgb(24.000000%, 16.500000%, 60.000000%)}
  /*]]>*/
  </style>
</head>

<body>
  <div>
    <h3 class="sigilNotInTOC" id="heading_id_3">導入</h3>

    <div>
      <br />
    </div>

    <div>
      CoffeeScriptは、Jeremy Ashkenasによって作られた、JavaScriptの輝かしい革命です。この本はMarijn Haverbekeの著書『雄弁なるJavaScript』(”Eloquent JavaScript”)を発展させることを試みています。JavaScriptの代わりとしてのCoffeeScriptは、その大きな変化はともかく、それ以外にも数えきれない程多くの変更が加えられたので説明する過程で加筆修正を行いました。
    </div>

    <div>
      <br />
    </div>

    <div>
      従って、この本で表現されている全てのものの文責は、ひとえに編集者にあります。OSSと同様の意味合いで、この本はフォークです。オリジナルの著者によって意図された素晴らしい作品を読みたければ、Marijn　Haverbekeの著書『雄弁なるJavaScript』(”Eloquent JavaScript”)を参照してください。
    </div>

    <div>
      <br />
    </div>

    <div>
      JavaScriptを知る必要はないですが、Smooth CoffeeScriptを読んだ後に、Simon Willisonの著書『JavaScript再入門』(“A re-introduction to JavaScript”)を読めば、デバッグのときや、JavaScriptライブラリを使用する際に役立ち得る概要が分かります。
    </div>

    <div>
      <br />
    </div>

    <div>
      <hr class="sigilChapterBreak" />
    </div>

    <div>
      <br />
    </div>

    <div>
      この本で出てくるプログラムの例は、CoffeeScript環境に加えてPreludeファイルを使用します。Preludeファイルには、Underscore.jsの関数ライブラリ、CoffeekupによるHTMLのマークアップ、サーバーサイドWebSockets、QuickCheckテストライブラリが含まれます。これらのライブラリはCoffeeScriptを便利な抽象性とテストツールによって拡張して、気の散るような定型コードを排除し、目の前のタスクへの集中を助けます。
    </div>

    <div>
      <br />
    </div>

    <div>
      原始的な言語のとても小さな一式でプログラムを表現することは可能ですが、それはすぐに冗長になるし、エラーがでやすい傾向にあります。ここで採用されるアプローチは、まるでプログラミング言語のネイティブの一部であるかのように機能的な積み木の一式をより広く含むことです。これらのより高いレベルの構成の観点で考えることによって、より複雑な問題を、より少ない労力で処理することができます。
    </div>

    <div>
      <br />
    </div>

    <div>
      正確さを保証するためにテストすることが必要です。これは、特にダイナミック言語や型なし言語で再利用可能なアルゴリズムを開発する際は当てはまります。機能が導入されるやいなや、QuickCheckスタイルのテストケースが積み重なっていくことによって、ライティングテストと前提の宣言が一つの途切れないライティングソフトの一部分になることを意味しています。
    </div>

    <div>
      <br />
    </div>

    <div>
      CoffeeScriptは、JavaScriptが使用可能なブラウザや環境で使用可能です。下のスクリーンショットはMac OS X、Windows、iOS環境で、同じWebサーバー、クライアントアプリケーションを実行したCoffeeScriptを示しています。
    </div>

    <div>
      <br />
    </div>

    <div>
      <br />
    </div>

    <div><img alt="" src="../Images/TadaOnMacOSX.png" /></div>

    <div>
      <br />
    </div>

    <div>
      <br />
    </div>

    <div>
      <img alt="" src="../Images/TadaOnWin7.png" /><br />
    </div>

    <div>
      <br />
    </div>

    <div>
      <br />
    </div>

    <div>
      <img alt="" src="../Images/TadaOnIOS.png" /><br />
    </div>

    <div>
      <br />
    </div>

    <div>
      以下のCoffeeScriptで書かれたプログラムのスクリーンショットは自己完結型アプリケーションの簡潔さを示しています。ここではCoffeekupでマークアップした独自のHTTP Webサーバで、HTML5のWebページが含まれています。ページには『生命の種子』(“Seed of Life”)の描画をCanvas要素で行なっています。Coffeekupは140行未満のCoffeeScriptで、フレームワークもJavaScriptも使われていない、純粋で快適なものです。
    </div>

    <div>
      <br />
    </div>

    <div class="section">
      <div class="layoutArea column">
        <p><span class="sgc-1">require</span> <span class="sgc-2">'./prelude'</span></p>

        <p><span class="sgc-1">webpage</span> <span class="sgc-3">=</span> <span class="sgc-1">kup.render</span> <span class="sgc-3">-&gt;</span> <span class="sgc-1">doctype</span> <span class="sgc-3">5<br /></span> <span class="sgc-1">html</span> <span class="sgc-3">-&gt;</span></p>

        <p><span class="sgc-4">head</span> <span class="sgc-3">-&gt;<br /></span> <span class="sgc-1">meta charset:</span> <span class="sgc-2">'utf-8'<br /></span> <span class="sgc-1">title</span> <span class="sgc-2">'My drawing | My awesome website'</span> <span class="sgc-1">style</span> <span class="sgc-2">'''</span></p>

        <p><span class="sgc-2">body {font-family: sans-serif}</span></p>

        <p><span class="sgc-2">header, nav, section, footer {display: block} '''</span></p>

        <p><span class="sgc-1">coffeescript</span> <span class="sgc-3">-&gt;<br /></span> <span class="sgc-1">draw</span> <span class="sgc-3">= (ctx,</span> <span class="sgc-1">x, y)</span> <span class="sgc-3">-&gt;</span></p>

        <p><span class="sgc-1">circle</span> <span class="sgc-3">= (ctx,</span> <span class="sgc-1">x, y)</span> <span class="sgc-3">-&gt;<br /></span> <span class="sgc-1">ctx.beginPath()<br />
        ctx.arc x, y,</span> <span class="sgc-3">100, 0, 2*Math.PI,</span> <span class="sgc-4">false</span> <span class="sgc-1">ctx.stroke()</span></p>

        <p><span class="sgc-1">ctx.strokeStyle</span> <span class="sgc-3">=</span> <span class="sgc-2">'rgba(255,40,20,0.7)'</span> <span class="sgc-1">circle ctx, x, y<br /></span> <span class="sgc-4">for</span> <span class="sgc-1">angle</span> <span class="sgc-4">in</span> <span class="sgc-3">[0...2*Math.PI]</span> <span class="sgc-4">by</span> <span class="sgc-3">1/3*Math.PI</span></p>

        <p><span class="sgc-1">circle ctx, x+100*Math.cos(angle), y+100*Math.sin(angle)</span></p>

        <p><span class="sgc-1">window.onload</span> <span class="sgc-3">= -&gt;<br /></span> <span class="sgc-1">canvas</span> <span class="sgc-3">=</span> <span class="sgc-1">document.getElementById</span> <span class="sgc-2">'drawCanvas'</span> <span class="sgc-1">context</span> <span class="sgc-3">=</span> <span class="sgc-1">canvas.getContext</span> <span class="sgc-2">'2d'<br /></span> <span class="sgc-1">draw context,</span> <span class="sgc-3">300, 200</span></p>

        <p><span class="sgc-1">body</span> <span class="sgc-3">-&gt;<br /></span> <span class="sgc-1">header</span> <span class="sgc-3">-&gt;</span> <span class="sgc-1">h1</span> <span class="sgc-2">'Seed of Life'<br /></span> <span class="sgc-1">canvas id:</span> <span class="sgc-2">'drawCanvas',</span> <span class="sgc-1">width:</span> <span class="sgc-3">600,</span> <span class="sgc-1">height:</span> <span class="sgc-3">400</span></p>

        <p><span class="sgc-1">http</span> <span class="sgc-3">=</span> <span class="sgc-1">require</span> <span class="sgc-2">'http'<br /></span> <span class="sgc-1">server</span> <span class="sgc-3">=</span> <span class="sgc-1">http.createServer</span> <span class="sgc-3">(req,</span> <span class="sgc-1">res)</span> <span class="sgc-3">-&gt;</span></p>

        <p><span class="sgc-4">show</span> <span class="sgc-3">"#{req.client.remoteAddress}</span> <span class="sgc-5">#{req.method} #{req.url}"</span> <span class="sgc-1">res.writeHead</span> <span class="sgc-3">200,</span> <span class="sgc-2">'Content-Type': 'text/html'<br /></span> <span class="sgc-1">res.write webpage<br />
        res.end()</span></p>

        <p><span class="sgc-1">server.listen</span> <span class="sgc-3">3389<br /></span> <span class="sgc-4">show</span> <span class="sgc-2">'Server running at'</span> <span class="sgc-4">show</span> <span class="sgc-1">server.address()&nbsp;</span></p>
      </div>

      <div class="section"></div>
    </div>

    <div>
      <br />
    </div>
  </div>
</body>
</html>
