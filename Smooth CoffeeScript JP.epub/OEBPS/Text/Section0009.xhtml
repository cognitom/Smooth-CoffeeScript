<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
</head>

<body>
  <p>P13</p>

  <p>このため、プログラミングはほとんどの場合単純ですが、一方で予測可能です。この分野の建国の父的なドナルド・クヌース、曰く、「芸術」です。単に受動的な読書を行うよりも、この本から何かを取得しましょう。鋭くあろうとしてください、演習を解決するための努力をしてください、あなたが前に出てきた内容を理解し合理的に確信している時のみ継続してください。コンピュータプログラマーは、その人が担当する宇宙の唯一の生みの親です。事実上無制限の複雑さの世界は、コンピュータプログラムという形で形成することができます。ジョセフ・ワイゼンバウムの作った、人工知能のプログラムは多くの事が含まれています。プログラムとは、多くのことです。</p>

  <p>それはプログラマが入力したテキストの一部であり、それはコンピュータが行うべきことを行えるように指示する力であり、それはコンピュータのメモリ内のデータであり、それは同じメモリ上で実行されるアクションを制御するものです。私たちが慣れ親しんだものにプログラムをなぞらえる比喩は失敗しがちだが、表面的に適してる比喩は機械だ。機械式時計の歯車は、巧みに噛みあって収まっている。そして、時計職人が優れていれば、それは正確に何年もの時を刻むことができます。プログラムの要素は、同様の方法で巧みに噛みあって収まっている。プログラマが、それらが何をしているか知っていれば、プログラムがクラッシュすることなく実行されます。コンピュータはこれらの無形のパーツのホストとして動作するように構築されたマシンです。コンピュータ自身はまぬけで容易なことしか行うことができません。コンピュータがとても役立つ理由は、それの動作が信じられないほど速いからです。プログラムは、工夫によってシンプルなアクションを繋ぎ、とても複雑なことを行うことができます。私たちの中のいくらかにとって、プログラムを書くことは魅力的なゲームです。プログラムは思考の建造物です。それは私たちのタイピングする手の下で無重量のものを建造します。もし夢中になれば、建造物のサイズと複雑さはコントロールできないほど成長します。誰が作ったかわからなります？　これがプログラミングでよくある問題です。今日のソフトウェアは、クラッシュし、失敗し、台無しになる傾向があるのには理由があるわけです。プログラムが動作した時、それは美しいです。プログラミングの技術とは、制御の複雑さのスキルです。素晴らしいプログラムは抑制され、その複雑なことを簡単に行うこと。</p>

  <p><br /></p>
</body>
</html>
