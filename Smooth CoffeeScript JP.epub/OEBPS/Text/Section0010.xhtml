<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
</head>

<body>
  <p>P14</p>

  <p>今日、多くのプログラマーは、この複雑さは小さくて正しいプログラムでできた中身を考慮しなくても良いパッケージでのみ、ベストな管理をされると信じています。</p>

  <p>高級言語はなんてムカツクんだろう？それを何か回りくどくなく予測ができる、自然で美しいプログラムに則ったものへ交換してみたてどうですか。そのプログラミングテクニックの全容は、巨大で、多様が魅力的で、静かに大きく人跡未踏です。</p>

  <p>それは間違いなく落とし穴と罠まみれに散らかっており、経験不足のプログラマーをあらゆる種類の恐ろしいミスに引きつけるが、あなたの知性を用いて注意喚起をしつづけるべきだ。学ぶあなたは、常にチャレンジャーであり、新しい領域への探検家です。探検し続けることを止めたプログラマーは、着実に活気がなくなり、喜びを忘れ、プログラムを失う。(そして、マネージャーとなる。)</p>

  <p>関心があるまで、プログラムがハッキリと基準に則ってるかどうか補正する。効率、明瞭さ、そして容量はやはり重要ですが、異なった判断の事象同士がどのように均衡を保つか、その判断とは他のプログラマーが作った？親指のルール(慣用句？)は有用ですが、それ自身が壊れることは恐れられてはいません。</p>

  <p>まず最初に、コンピューティングの誕生した時、プログラミング言語はありませんでした。プログラムは以下みたいな感じでした。</p>

  <p>上のプログラムは、1から10までを足し、そして結果を出力します。これは、とても単純な種類のコンピュータで走らせることができました。初期のコンピュータにおけるプログラムにおいて大切だったこととは、大きなスイッチを右に配置するということや、むき出しのカードボードに穴を開け、それらをコンピュータに与えるということでした。これが退屈だったということや、エラーのでやすい傾向がある手段だということがイメージできます。シンプルなプログラムを書くということは、より多くの器用さや訓練を必要とする(なんて、信じられないでしょう)</p>

  <p><br /></p>
</body>
</html>
